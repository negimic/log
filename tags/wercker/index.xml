<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Wercker on negimic blog</title>
    <link>https://blog.negimic.com/tags/wercker/</link>
    <description>Recent content in Wercker on negimic blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <copyright>2016 negimic All Rights Reserved</copyright>
    <lastBuildDate>Mon, 22 Jun 2015 12:13:58 +0900</lastBuildDate>
    
	<atom:link href="https://blog.negimic.com/tags/wercker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>werckerでhugoビルド→githubにデプロイ</title>
      <link>https://blog.negimic.com/post/2015/wercker-success/</link>
      <pubDate>Mon, 22 Jun 2015 12:13:58 +0900</pubDate>
      
      <guid>https://blog.negimic.com/post/2015/wercker-success/</guid>
      <description>試行錯誤した結果、やり方がわかったので備忘録。
 hugoでサイト作る。 werckerにアプリを登録 自動デプロイ設定をしてgithubのトークンを登録 wercker.ymlを作ってルートフォルダに置く  
1. hugoでサイトを作る 簡単。過去の記事参照で。
あと、publicフォルダはgit管理から外しておく。

2. werckerにアプリを登録 werckerに新規登録して、アプリを登録する。
アプリ登録の際に気をつけるべきはこれ。
→ werckerにアプリを登録するとき、dockerを有効にするチェックをOFFにする
これのせいですごい悩んだ。。
このチェックをOFFです、OFF。

3. 自動デプロイ設定をしてgithubのトークンを登録 werckerでアプリを登録したら、アプリの設定ページへ。
以下もろもろ設定する。
 DEPLOY TARGETSを設定する。 Add deploy targetはCustom deployを選ぶ。 Deploy target nameは適当に分かりやすい名前付ける。 Auto deployはチェックを入れて対象のブランチ名を選ぶ。
自分はmasterにプッシュしたらデプロイされるようにしました。 Deploy pipelineには、githubで作ったトークンを記述する。
ここで登録した変数をwercker.ymlで使う（自分はGIT_TOKENで登録）  
4. プロジェクトのルートフォルダにwercker.ymlを置く 置く。
box: wercker/default build: steps: - arjen/hugo-build: version: &amp;quot;0.14&amp;quot; theme: casper flags: --buildDrafts=true deploy: steps: - lukevivier/gh-pages@0.2.1: token: $GIT_TOKEN domain: blog.negimic.com basedir: public  domain 部分は、カスタム使ってないなら [username].</description>
    </item>
    
    <item>
      <title>werckerに再チャレンジ。</title>
      <link>https://blog.negimic.com/post/2015/wercker/</link>
      <pubDate>Thu, 18 Jun 2015 22:27:30 +0900</pubDate>
      
      <guid>https://blog.negimic.com/post/2015/wercker/</guid>
      <description>先輩がwerckerを使って自動ビルドしてるのを見て、
マネしたくなってチャレンジしたけど全然思い通りに動かなくて挫折。
結局、手動でビルドして生成されたpublicを手動デプロイして運用という、
なんともゴリゴリなやり方。。
やっぱちょっとかっこ悪いのでもっかいチャレンジする！

werckerでやりたいこと  theme(casper) を使ってhugoのbuiild github pagesにデプロイ  これだけなんす。 hugoの公式にもやり方書いてるし、werckerのstepも既に在る。 のになんで出来なかったんだろう。。。残念だ。。。

1. theme(casper) を使ってhugoのbuiild 公式にやり方が載ってあったのでラッキー！って思ったらエラー出まくった orz
エラーをぐぐったら、ドンピシャ感のあるissueに辿り着いた。
issue
適当にしか読めてないけど、おそらくbox: wercker/defaultの仕様が変わったようで
修正を待たないと使えないっぽい。え、そんなことってあるの？
boxの種類、 wrecker/default と wrecker/rvm と debian を試してみて、 buildのstepちゃんと通ったのがdebianだけだった。
他のは上記issueと同じ所で止まった。
んで、debianのままでgh-pagesに自動デプロイ走ったらgitコマンドがないと怒られー・・・詰んだ。
今日はもう寝る (¦3ꇤ[__]　ふて寝じゃ。
なんか根本から間違ってる気がするのでまた今度１からやる。

追記 やはり根本から間違ってたｗｗ
くううううう
一応完成したので次の記事にまとめる。</description>
    </item>
    
  </channel>
</rss>